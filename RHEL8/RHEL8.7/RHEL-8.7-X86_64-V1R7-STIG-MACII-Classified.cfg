#version=RHEL8
# Use graphical install
#graphical

text
skipx

repo --name="AppStream" --baseurl=file:///run/install/sources/mount-0000-cdrom/AppStream

%pre --interpreter=/usr/bin/bash --log=/tmp/ks-pre.log --erroronfail
iotty=`tty`
exec < $iotty > $iotty 2> $iotty

printf "ignoredisk --only-use=%s\n" "$(fdisk -l | awk '$1 == "Disk" {print $2}' | grep -v -e "identifier" -e "mapper" -e "loop" | sed 's#:$##g' | sort | uniq | head -n 1)" > /tmp/install-disk.inc

function SETIP {
        printf "Will this system be using Reserved DHCP or Static IP addressing?\n1) Reserved DHCP\n2) Static IP\n"
        read "iptype"
        if [ "$iptype" = "1" ]; then
                printf "Reserved DHCP selected.\n"
                SETHOSTNAME
                printf "network  --activate --bootproto=dhcp --noipv6 --hostname=%s --onboot=yes\n" "$svrname" > /tmp/netconfig.inc
        elif [ "$iptype" = "2" ]; then
                printf "Static IP addressing selected.\n"
                SETHOSTNAME
                SETSTATICIP
                printf "network  --activate --bootproto=static --ip=%s --netmask=%s --gateway=%s --noipv6 --hostname=%s --onboot=yes --nameserver=%s,%s\n" "$ip" "$netmask" "$gw" "$svrname" "$dns1" "$dns2" > /tmp/netconfig.inc
        else
                printf "That is not a valid option.\n"
                SETIP
        fi
}
function SETSTATICIP {
        printf "You will now be prompted for the IP address, Subnet mask (255.255.255.0), Default Gateway, and Name Servers.\n\n"
        printf "IP: "
        read ip
        printf "Subnet Mask: "
        read netmask
        printf "Default Gateway: "
        read gw
        printf "First Name Server: "
        read dns1
        printf "Second Name Server: "
        read dns2
        for dnssvr in $dns1 $dns2; do
                if [ -z "$dnssvr" ]; then
                        printf "You need to state two DNS servers.\n"
                        SETSTATICIP
                fi
        done
}
function SETHOSTNAME {
        printf "\nWhat should the Fully Qualified Domain Name (FQDN) be?\n"
        read svrname
        if [ ! -z "$svrname" ]; then
                export svrname="$(echo $svrname | tr [:upper:] [:lower:] | tr -d [:space:])"
                printf "Setting FQDN to: %s\n" "$svrname"
        else
                SETHOSTNAME
        fi
}
function SETTZ {
        printf "NTP server: "
        read ntpsvr
        if [ -z "$ntpsvr" ]; then
                printf "Need to specify an NTP server.\n"
                SETTZ
        else
                printf "timezone Etc/GMT --isUtc --ntpservers=%s\n" "$ntpsvr" > /tmp/ntp-config.inc
        fi
}
function PREGENCFG {
        printf "\n\n\n"
        SETIP
        SETTZ
}
PREGENCFG
function SETSTATICIP {
        printf "You will now be prompted for the IP address, Subnet mask (255.255.255.0), Default Gateway, and Name Servers.\n\n"
        printf "IP: "
        read ip
        printf "Subnet Mask: "
        read netmask
        printf "Default Gateway: "
        read gw
        printf "First Name Server: "
        read dns1
        printf "Second Name Server: "
        read dns2
        for dnssvr in $dns1 $dns2; do
                if [ -z "$dnssvr" ]; then
                        printf "You need to state two DNS servers.\n"
                        SETSTATICIP
                fi
        done
}
function SETHOSTNAME {
        printf "\nWhat should the Fully Qualified Domain Name (FQDN) be?\n"
        read svrname
        if [ ! -z "$svrname" ]; then
                export svrname="$(echo $svrname | tr [:upper:] [:lower:] | tr -d [:space:])"
                printf "Setting FQDN to: %s\n" "$svrname"
        else
                SETHOSTNAME
        fi
}
function SETTZ {
        printf "NTP server: "
        read ntpsvr
        if [ -z "$ntpsvr" ]; then
                printf "Need to specify an NTP server.\n"
                SETTZ
        else
                printf "timezone Etc/GMT --isUtc --ntpservers=%s\n" "$ntpsvr" > /tmp/ntp-config.inc
        fi
}
function PREGENCFG {
        printf "\n\n\n"
        SETIP
        SETTZ
}
PREGENCFG
%end
%pre-install --interpreter=/usr/bin/bash --log=/mnt/sysroot/root/ks-pre.log
%end


selinux --enforcing
firewall --enabled --ssh
authselect select sssd with-smartcard with-smartcard-lock-on-removal with-faillock with-mkhomedir with-sudo

eula --agreed

%packages
@^minimal-environment
@guest-agents --optional
@hardware-monitoring
@performance
@security-tools --optional
@smart-card --optional
aide
audit
fapolicyd
firewalld
opensc
openscap
openscap-scanner
openssh-server
openssl-pkcs11
policycoreutils
postfix
rng-tools
rsyslog
rsyslog-gnutls
scap-security-guide
sssd
dos2unix
lsof
tmux
usbguard
vim
git
policycoreutils
policycoreutils-utils
libsss_certmap
oddjob-mkhomedir
virt-who
-abrt
-abrt-addon-ccpp
-abrt-addon-kerneloops
-abrt-cli
-abrt-plugin-sosreport
-iprutils
-krb5-server
-krb5-workstation
-libreport-plugin-logger
-libreport-plugin-rhtsupport
-python3-abrt-addon
-rsh-server
-sendmail
-telnet-server
-tftp-server
-tuned
-vsftpd
-xorg-x11-server-Xorg
-xorg-x11-server-Xwayland
-xorg-x11-server-common
-xorg-x11-server-utils

%end

# Keyboard layouts
keyboard --xlayouts='us'
# System language
lang en_US.UTF-8

# Network information
#network  --activate --bootproto=dhcp --noipv6 --hostname=$(date +%d%b%y-%H%M%S)-fresh_install.localdomain
%include /tmp/netconfig.inc

# Use CDROM installation media
cdrom

# Run the Setup Agent on first boot
firstboot --enable

#ignoredisk --only-use=sda
%include /tmp/install-disk.inc

# Partition clearing information
zerombr
clearpart --all --initlabel
#bootloader --location=mbr --iscrypted --timeout=30 --password=grub.pbkdf2.sha512.10000.77F6B9A808BD88EF85F76074D410921FFDFA6D935A05E1CD5591763D9BF3C2D96293E3250ED9DFE2EF4A9E87FF51EEE77B563D6843B5CEF4867F264D753E81BF.71C66EFD99EBBA56E01CED768710235BE201FFE2CCFC3AC3F7C1F128D1CF013899A741B3F6F820A525837BC1CE934FCD8D98E41472BD8C7D46920872B7D782A8
bootloader --location=mbr --iscrypted --timeout=30 --password=grub.pbkdf2.sha512.10000.6BE7F3F33745BFA6A17CF5B142BB22D42758AD1129178BD2E4449ED15784892F26EE957841218D0C650F78A14F65BCBC017376512388A591C4AB1815E01884D0.C7D2BB9A74F1185DA410B2FFDEE169762434BF7265ACFB10AF8B2A871835C8628258A56A9BAC90055D378BEBFEAF1100BC8E556AEE2886131FDCF59739C7F6A8

# Disk partitioning information
part /boot --fstype="xfs" --ondisk=sda --recommended
part /boot/efi --fstype="xfs" --ondisk=sda --recommended --fsoptions="umask=0077,shortname=winnt"
part pv.155 --fstype="lvmpv" --ondisk=sda --grow
#volgroup rhel --pesize=4096 pv.155
volgroup inscomgisa --reserved-percent=25 pv.155
logvol /var/log/audit --fstype="xfs" --recommended --name=var_log_audit --vgname=inscomgisa
logvol /var/tmp --fstype="xfs" --recommended --name=var_tmp --vgname=inscomgisa
logvol /var --fstype="xfs" --recommended --name=var --vgname=inscomgisa
logvol /home --fstype="xfs" --recommended --name=home --vgname=inscomgisa
logvol /tmp --fstype="xfs" --recommended --name=tmp --vgname=inscomgisa
logvol /var/log --fstype="xfs" --recommended --name=var_log --vgname=inscomgisa
logvol / --fstype="xfs" --size=10240 --name=root --vgname=inscomgisa
logvol swap --fstype="swap" --recommended --name=swap --vgname=inscomgisa

# System timezone
timezone Etc/GMT --isUtc
%include /tmp/ntp-config.inc

# Root password
#rootpw --lock --iscrypted $6$hfYOqqIu/jpEKtaG$9cmijyiiU42Cs2ifY9mBLXPRmomH34dtyGn/uFy0rW6RzMi543g8agDFH8ktIQFyWSeaoAh.6yExUdbYto5dj/
rootpw --iscrypted $6$6q4aPwgASg.nK6rz$c8ArS4AIrv1TMnzzX1HzwyEwcQm7O388eTIxC69yMIWlXraW8RAyB.WHYooFbGrevgLL1oFlJPmYBQpdsAKzs0

#user --name=gisa.adm --gecos="GISA Installation Admin account" --groups=wheel --iscrypted $6$A5kriwzPGPhMB.Fz$U33luCG468zb9aHUS9CYLUfKSBFJFaL.NEiBF8bUskKmpZhExtI5xjw9Dnvv20nig3gv6QijrtgSCCqyaKDOo.
user --name=gisa.adm --getcos="GISA Installation Admin account" --groups=wheel --iscrypted --password=$6$ss2QCS7OmQtPl.fs$R9iDN4JEI1gO.GzzFxuTDPzx8sh8APFY12RDSTS.rFnJw2Pa0xuWyqYfqIV5Gii/vpiF4PEXZk8bVyuLDjHVK/

%addon org_fedora_oscap
    content-type = scap-security-guide
    datastream-id = scap_org.open-scap_datastream_from_xccdf_ssg-rhel8-xccdf-1.2.xml
    xccdf-id = scap_org.open-scap_cref_ssg-rhel8-xccdf-1.2.xml
    profile = xccdf_org.ssgproject.content_profile_stig
%end
reboot --eject

%addon com_redhat_kdump --disable --reserve-mb='auto'

%end

%post --interpreter=/usr/bin/bash --log=/root/ks-post.log
export USER=root
mount -t iso9660 /dev/sr0 /media
mkdir -p /opt/INSCOM-GISA/STIG-Scripts
cp /media/RHEL8-V1R4_Benchmark-MAC-II-Sensitive.bash /opt/INSCOM-GISA/STIG-Scripts/
umount /media
/opt/INSCOM-GISA/STIG-Scripts/RHEL8-V1R4_Benchmark-MAC-II-Sensitive.bash
%end

%anaconda
pwpolicy root --minlen=15 --minquality=35 --strict --nochanges --notempty
pwpolicy user --minlen=15 --minquality=35 --strict --nochanges --notempty
pwpolicy luks --minlen=15 --minquality=35 --strict --nochanges --notempty
%end
