#version=RHEL8
#######
# INSCOM GISA RHEL 8.9 kickstart config version 1.2 - DISA RHEL STIG RHEL8 V1R12
# Author: Boyd.h.ako.ctr@army.mil
# Date: 16NOV2023
#######

# Use Text interface
text

# Skip configuration of Graphical User Interface
skipx

# Set Installation YUM repositories
repo --name="BaseOS" --baseurl=file:///run/install/sources/mount-0000-cdrom/BaseOS
repo --name="AppStream" --baseurl=file:///run/install/sources/mount-0000-cdrom/AppStream

# Pre-installation script
%pre --interpreter=/usr/bin/bash --log=/tmp/ks-pre.log --erroronfail
iotty=`tty`
exec < $iotty > $iotty 2> $iotty

printf "ignoredisk --only-use=%s\n" "$(fdisk -l | awk '$1 == "Disk" {print $2}' | grep -v -e "identifier" -e "mapper" -e "loop" | sed 's#:$##g' | sort | uniq | head -n 1)" > /tmp/install-disk.inc

function SETIP {
	printf "Will this system be using Reserved DHCP or Static IP addressing?\n1) Reserved DHCP\n2) Static IP\n"
	read "iptype"
	if [ "$iptype" = "1" ]; then
		printf "Reserved DHCP selected.\n"
		SETHOSTNAME
		printf "network  --activate --bootproto=dhcp --noipv6 --hostname=%s --onboot=yes\n" "$svrname" > /tmp/netconfig.inc
	elif [ "$iptype" = "2" ]; then
		printf "Static IP addressing selected.\n"
		SETHOSTNAME
		SETSTATICIP
		printf "network  --activate --bootproto=static --ip=%s --netmask=%s --gateway=%s --noipv6 --hostname=%s --onboot=yes --nameserver=%s,%s\n" "$ip" "$netmask" "$gw" "$svrname" "$dns1" "$dns2" > /tmp/netconfig.inc
	else
		printf "That is not a valid option.\n"
		SETIP
	fi
}
function SETSTATICIP {
	printf "You will now be prompted for the IP address, Subnet mask (255.255.255.0), Default Gateway, and Name Servers.\n\n"
	printf "IP: "
	read ip
	printf "Subnet Mask: "
	read netmask
	printf "Default Gateway: "
	read gw
	printf "First Name Server: "
	read dns1
	printf "Second Name Server: "
	read dns2
	for dnssvr in $dns1 $dns2; do
		if [ -z "$dnssvr" ]; then
			printf "You need to state two DNS servers.\n"
			SETSTATICIP
		fi
	done
}
function SETHOSTNAME {
	printf "\nWhat should the Fully Qualified Domain Name (FQDN) be?\n"
	read svrname
	if [ ! -z "$svrname" ]; then
		export svrname="$(echo $svrname | tr [:upper:] [:lower:] | tr -d [:space:])"
		printf "Setting FQDN to: %s\n" "$svrname"
	else
		SETHOSTNAME
	fi
}
function SETTZ {
	printf "NTP server: "
	read ntpsvr
	if [ -z "$ntpsvr" ]; then
		printf "Need to specify an NTP server.\n"
		SETTZ
	else
		printf "timezone Etc/UTC --isUtc --ntpservers=%s\n" "$ntpsvr" > /tmp/ntp-config.inc
	fi
}
function PREGENCFG {
	printf "\n\n\n"
	SETIP
	SETTZ
}
PREGENCFG
%end
%pre-install --interpreter=/usr/bin/bash --log=/mnt/sysroot/root/ks-pre.log
%end

# Enable SELinux
selinux --enforcing

# Enable firewall to permit SSH
firewall --enabled --ssh

# Configure Authentication settings using authselect
authselect select sssd with-smartcard with-smartcard-lock-on-removal with-faillock with-mkhomedir with-sudo

# Agree to End User License Agreement
eula --agreed

# Software installation selection
%packages
@^minimal-environment
@security-tools --optional
@smart-card --optional
@guest-agents --optional
aide
audit
bind-utils
fapolicyd
firewalld
iotop
kpatch
libsss_certmap
lsof
mailx
oddjob-mkhomedir
opensc
openscap
openscap-scanner
openssh-server
openssh-ldap
openssl-pkcs11
pam_ssh_agent_auth
policycoreutils
policycoreutils-python-utils
postfix
dos2unix
rng-tools
rsync
rsyslog
rsyslog-gnutls
scap-security-guide
sssd
tmux
usbguard
unzip
git
virt-who
vim
wget
yum-utils
-abrt
-abrt-addon-ccpp
-abrt-addon-kerneloops
-abrt-addon-python
-abrt-cli
-abrt-plugin-logger
-abrt-plugin-rhtsupport
-abrt-plugin-sosreport
-dnf-plugin-subscription-manager
-gssproxy
-insights-client
-iprutils
-plymouth
-rhc
-rsh-server
-sendmail
-subscription-manager
-telnet-server
-tftp-server
-tuned
-vsftpd
-xorg-x11-server-Xorg
-xorg-x11-server-Xwayland
-xorg-x11-server-common
-xorg-x11-server-utils

%end

# Enable services
services --enabled=kpatch,ssh

# Keyboard layouts
keyboard --xlayouts='us'

# System language
lang en_US.UTF-8

# Network information
%include /tmp/netconfig.inc

# Use CDROM installation media
cdrom

# Run the Setup Agent on first boot
firstboot --enable --reconfig

#ignoredisk --only-use=sda
%include /tmp/install-disk.inc
# Partition clearing information
zerombr
clearpart --all --initlabel
bootloader --location=mbr --timeout=30 --password=ChangeMe
# Disk partitioning information
part /boot/efi --fstype="efi" --size=2048 --fsoptions="nosuid,umask=0077,shortname=winnt"
part /boot --fstype="xfs" --size=2048 --fsoptions="defaults,nosuid,nodev"
part pv.1144 --fstype="lvmpv" --grow
volgroup inscomgisa --reserved-percent=25 pv.1144
logvol /home --fstype="xfs" --size=2048 --name=home --vgname=inscomgisa --fsoptions="defaults,noexec,nosuid,nodev"
logvol /var --fstype="xfs" --size=2048 --name=var --vgname=inscomgisa --fsoptions="defaults,nodev"
logvol /opt/splunkforwarder --fstype="xfs" --size=2048 --name=opt_splunkforwarder --vgname=inscomgisa --fsoptions="defaults,nosuid,nodev,noexec"
logvol /var/log/audit --fstype="xfs" --size=10240 --name=var_log_audit --vgname=inscomgisa --fsoptions="defaults,nodev,noexec,nosuid"
logvol / --fstype="xfs" --size=10240 --name=root --vgname=inscomgisa
logvol /var/log --fstype="xfs" --size=2048 --name=var_log --vgname=inscomgisa --fsoptions="defaults,nodev,noexec,nosuid"
logvol swap --fstype="swap" --recommended --name=swap --vgname=inscomgisa
logvol /opt --fstype="xfs" --size=2048 --name=opt --vgname=inscomgisa --fsoptions="defaults,nodev"
logvol /var/tmp --fstype="xfs" --size=2048 --name=var_tmp --vgname=inscomgisa --fsoptions="defaults,nodev,noexec,nosuid"
logvol /tmp --fstype="xfs" --size=2048 --name=tmp --vgname=inscomgisa --fsoptions="defaults,nodev,noexec,nosuid"

# System timezone
%include /tmp/ntp-config.inc

# Root password
rootpw --plaintext ChangeMe

# Create initial temporary admin account for SSH access
user --name=temp.admin --gecos="Temporary Admin account for SSH access post-installation" --groups=wheel --plaintext --password=ChangeMe

# Disable KDUMP per STIG
%addon com_redhat_kdump --disable --reserve-mb='auto'
%end

# Run OpenSCAP DISA STIG SCAP rules
%addon org_fedora_oscap
    content-type = scap-security-guide
    datastream-id = scap_org.open-scap_datastream_from_xccdf_ssg-rhel8-xccdf.xml
    xccdf-id = scap_org.open-scap_cref_ssg-rhel8-xccdf.xml
    profile = xccdf_org.ssgproject.content_profile_stig
%end

# Reboot after install
reboot --eject

# Post-installation script
%post --interpreter=/usr/bin/bash --log=/root/ks-post.log
VOLID=GISA-RHEL8.9-V1R12
export USER=root
installfilesdir="/opt/INSCOM-GISA"
installrepo="$installfilesdir/install-yum-repo.conf"
mount -t iso9660 /dev/sr0 /media
mkdir -p $installfilesdir
for file in RHEL8-V1R4_Benchmark-MAC-II-Sensitive.bash U_RHEL_8_V1R12_STIG_Ansible.zip; do
	cp -rf /media/$file $installfilesdir/
done
for dir in $(find /media/ -type d -name repodata); do 
	repodir="$(dirname $dir)"
	reponame="install-$(basename $repodir)"
	printf "[%s]\nname=%s\nbaseurl=file://%s\nenabled=1\ngpgcheck=0\n\n" "$reponame" "$reponame" "$repodir" >> $installrepo
done
dnf --config $installrepo -y module install idm:client
dnf --config $installrepo -y install ansible-core
cd $installfilesdir
unzip U_RHEL_8_V1R12_STIG_Ansible.zip -d $installfilesdir
unzip rhel8STIG-ansible.zip -d $installfilesdir

#dnf -y remove ansible-core mpdecimal python3.11 python3.11-cffi python3.11-cryptography python3.11-libs python3.11-pip-wheel python3.11-ply python3.11-pycparser python3.11-pyyaml python3.11-setuptools-wheel sshpass
umount /media
#/opt/INSCOM-GISA/STIG-Scripts/RHEL8-V1R4_Benchmark-MAC-II-Sensitive.bash
%end

# Set password policies
%anaconda
pwpolicy root --minlen=15 --minquality=35 --strict --notempty
pwpolicy user --minlen=15 --minquality=35 --strict --notempty
pwpolicy luks --minlen=15 --minquality=35 --strict --notempty
%end
